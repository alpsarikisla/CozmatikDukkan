@model CozmatikDukkan.Models.Product
@using CozmatikDukkan.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/ManagerPanel/Views/Shared/_LayoutPage1.cshtml";
    List<ProductImage> images = ViewBag.Images as List<ProductImage>;
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h3">Ürün Ekle</h1>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                Ürün Bilgileri
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal row">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.ID)
                        <div class="col-md-6">
                            <div class=" mb-4">
                                <label class="control-label">Kategori</label>
                                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class=" mb-4">
                                <label class="control-label">Marka</label>
                                @Html.DropDownList("BrandID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class=" mb-4">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class=" mb-4">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                            <div class=" mb-4">
                                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                            </div>
                            <div class=" mb-4">
                                @Html.LabelFor(model => model.ProductStatus, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ProductStatus)
                                @Html.ValidationMessageFor(model => model.ProductStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class=" mb-4">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-4 row">
                                <div class="col-md-4">
                                    <img src="~/Assets/ProductImages/@Model.CoverImage" class="img-thumbnail" />
                                </div>
                                <div class="col-md-8">
                                    @Html.LabelFor(model => model.CoverImage, htmlAttributes: new { @class = "control-label" })
                                    <input type="file" name="file" id="file" class="form-control" />
                                    @Html.ValidationMessageFor(model => model.CoverImage, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="col-md-12">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Ürün Düzenle" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="card-footer">

            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                Ürün Ek Resimleri
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        @if (images.Count != 0)
                        {
                            <div class="row">
                                @foreach (ProductImage item in images)
                                {
                                    <div class="col-md-4">
                                        <div class="card">
                                            <div class="card-body">
                                                <img src="~/Assets/ProductImages/@item.ImagePath" class="img-thumbnail" />
                                            </div>
                                            <div class="card-footer"></div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="row">
                                <label class="badge bg-info">
                                    Henüz Bişi Yok
                                </label>
                            </div>
                        }
                    </div>
                    <div class="col-md-4">
                        @using (Html.BeginForm("AddImage", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <div class="form-horizontal row">
                                @Html.Hidden("id", Model.ID)
                                <div class="mb-4">
                                    <label>Çoklu Resim Ekleyebilirsiniz</label>
                                    <input type="file" name="file" id="file" class="form-control" multiple />
                                </div>
                                <div class="mb-4">
                                    <input type="submit" value="Resim Ekle" class="btn btn-primary" />
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="card-footer">
                @Html.ActionLink("Listeye Geri Dön", "Index")
            </div>
        </div>
    </div>

</div>

